// Code generated by "stringer -type=Condition -linecomment"; DO NOT EDIT.

package saslerr

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConditionNone-0]
	_ = x[ConditionAborted-1]
	_ = x[ConditionAccountDisabled-2]
	_ = x[ConditionCredentialsExpired-3]
	_ = x[ConditionEncryptionRequired-4]
	_ = x[ConditionIncorrectEncoding-5]
	_ = x[ConditionInvalidAuthzID-6]
	_ = x[ConditionInvalidMechanism-7]
	_ = x[ConditionMalformedRequest-8]
	_ = x[ConditionMechanismTooWeak-9]
	_ = x[ConditionNotAuthorized-10]
	_ = x[ConditionTemporaryAuthFailure-11]
}

const _Condition_name = "noneabortedaccount-disabledcredentials-expiredencryption-requiredincorrect-encodinginvalid-authzidinvalid-mechanismmalformed-requestmechanism-too-weaknot-authorizedtemporary-auth-failure"

var _Condition_index = [...]uint8{0, 4, 11, 27, 46, 65, 83, 98, 115, 132, 150, 164, 186}

func (i Condition) String() string {
	if i >= Condition(len(_Condition_index)-1) {
		return "Condition(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Condition_name[_Condition_index[i]:_Condition_index[i+1]]
}
